<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>This Job will use the BNG utility to genrate the build notes and share it by mail</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs></blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>30</daysToKeep>
        <numToKeep>-1</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty plugin="build-failure-analyzer@1.19.0">
      <doNotScan>false</doNotScan>
    </com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.2">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.27">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>Stream</name>
          <description>Affected stream to gather the changes from. As :Archer_17.12_Integ or Archer_17.04_Integ</description>
          <defaultValue>Archer_${MajorMinor_Ver}_Integ</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>BUILD_VERSION</name>
          <description>Build Version to be used the report default name and the email</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ReportName</name>
          <description>The relevant name of the generated report</description>
          <defaultValue>${BUILD_VERSION}-BuildNotes</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>team_scm_fetchDestination</name>
          <description>Snadbox which contain the BNG utility</description>
          <defaultValue>D:\Sandboxes\omdbuild_${BUILD_VERSION}</defaultValue>
        </hudson.model.StringParameterDefinition>
        <org.jvnet.jenkins.plugins.nodelabelparameter.NodeParameterDefinition plugin="nodelabelparameter@1.7.2">
          <name>BuildEngine</name>
          <description></description>
          <allowedSlaves/>
          <defaultSlaves/>
          <triggerIfResult>multiSelectionDisallowed</triggerIfResult>
          <allowMultiNodeSelection>false</allowMultiNodeSelection>
          <triggerConcurrentBuilds>false</triggerConcurrentBuilds>
          <ignoreOfflineNodes>false</ignoreOfflineNodes>
          <nodeEligibility class="org.jvnet.jenkins.plugins.nodelabelparameter.node.AllNodeEligibility"/>
        </org.jvnet.jenkins.plugins.nodelabelparameter.NodeParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>recipientList</name>
          <description>comma seperated list of emails to get the generated build notes. As Adham.Saffori@kla-tencor.com Or groups of mails seperated by comma.</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>emailGroupsDefFile</name>
          <description></description>
          <defaultValue>\\isr1appcc02\SCM\OMD\Jenkins_Build_conf_files\Email_Groups.txt</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>JENKINCONFIGPATH</name>
          <description></description>
          <defaultValue>\\isr1appcc02\SCM\OMD</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <EnvInjectJobProperty plugin="envinject@1.90">
      <info>
        <propertiesFilePath>${JENKINCONFIGPATH}\Jenkins_Build_conf_files\Global_Env.properties</propertiesFilePath>
        <propertiesContent>http_proxy=http://isr1vmrtcproxy01:3128</propertiesContent>
        <groovyScriptContent>//reading email reciepts
if (recipientList.contains(&quot;@&quot;)) {
     def map = [ &quot;recipients_list&quot;:recipientList]
     return 	map
}
def file = new File(emailGroupsDefFile)
def reciepts_list=&quot;&quot;;
  	if (file.exists()){
        //println &quot;Below is the content of the file ${file.absolutePath}&quot;
      def lineNo = 1
      def line
      file.withReader { reader -&gt;
         while ((line = reader.readLine())!=null) {
            if (line.trim() ==&quot;&quot;) continue;
            //println &quot;${lineNo}. ${line}&quot;
            lineNo++
            groupOwn=line.substring(0,line.indexOf(&quot;=&quot;))
            reciepts_list+=recipientList.contains(groupOwn) ? line.substring(line.indexOf(&quot;=&quot;)+1).trim():&quot;&quot;;
           
            reciepts_list=(!reciepts_list.trim().endsWith(&quot;,&quot;) &amp; !reciepts_list.trim().equals (&quot;&quot;)) ?reciepts_list.trim()+&quot;,&quot;:reciepts_list.trim()
           
         }
      }
		
    }
      	def map = [ &quot;recipients_list&quot;:reciepts_list]
	return 	map</groovyScriptContent>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
      <on>true</on>
      <keepJenkinsSystemVariables>true</keepJenkinsSystemVariables>
      <keepBuildVariables>true</keepBuildVariables>
      <overrideBuildParameters>false</overrideBuildParameters>
      <contributors/>
    </EnvInjectJobProperty>
    <org.jvnet.hudson.plugins.shelveproject.ShelveProjectProperty plugin="shelve-project-plugin@1.5"/>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.BatchFile>
      <command>java -jar &quot;%BNG_PATH%\BNG.jar&quot; -acf &quot;%team_scm_fetchDestination%\OMD_Builds\JenkinsBuild\Apps\BNG\Attributeconfig.xml&quot; -grf html -r %repositoryAddress% -u %BuildUser% -p &quot;%BuildPass%&quot; -pa &quot;OMD NuArcher&quot; -rf %ReportName% -rp &quot;%WORKSPACE%&quot;  -tsw %Stream%&#xd;
IF NOT &quot;%ERRORLEVEL%&quot; ==&quot;0&quot; Exit /b 1</command>
    </hudson.tasks.BatchFile>
  </builders>
  <publishers>
    <hudson.plugins.emailext.ExtendedEmailPublisher plugin="email-ext@2.61">
      <recipientList>${recipients_list},${BUILD_USER_EMAIL}</recipientList>
      <configuredTriggers>
        <hudson.plugins.emailext.plugins.trigger.AlwaysTrigger>
          <email>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <recipientProviders>
              <hudson.plugins.emailext.plugins.recipients.DevelopersRecipientProvider/>
              <hudson.plugins.emailext.plugins.recipients.ListRecipientProvider/>
            </recipientProviders>
            <attachmentsPattern></attachmentsPattern>
            <attachBuildLog>false</attachBuildLog>
            <compressBuildLog>false</compressBuildLog>
            <replyTo>$PROJECT_DEFAULT_REPLYTO</replyTo>
            <contentType>project</contentType>
          </email>
        </hudson.plugins.emailext.plugins.trigger.AlwaysTrigger>
      </configuredTriggers>
      <contentType>text/html</contentType>
      <defaultSubject>${BUILD_VERSION} - Build Notes</defaultSubject>
      <defaultContent>Build ${BUILD_VERSION} is ready for build . build notes attached</defaultContent>
      <attachmentsPattern>${ReportName}.html</attachmentsPattern>
      <presendScript>if (build.result.toString().equals(&apos;SUCCESS&apos;) &amp;&amp; build.logFile.text.readLines().any { it =~ /.*does not contain any change set.*/ }) {
   content = (String)msg.getContent().getBodyPart(0).getContent()
   content = &quot;No new changes in stream &quot;+build.getEnvVars().get(&quot;Stream&quot;)+&quot; since last snapshot&quot;
   msg.setSubject(build.getEnvVars().get(&quot;BUILD_VERSION&quot;)+&quot; - Build Notes [No Changes]&quot;);
   msg.setText(content)
   msg.saveChanges() 
}
if (build.result.toString().equals(&apos;FAILURE&apos;)) {
   msg.setSubject(build.getEnvVars().get(&quot;BUILD_VERSION&quot;)+&quot; - Build Notes [Failed]&quot;);
   content = (String)msg.getContent().getBodyPart(0).getContent()
   content = &quot;Build notes generation failed.Please check log, via: &quot;+build.getEnvVars().get(&quot;BUILD_URL&quot;)
   msg.setText(content)
   msg.saveChanges() 
}</presendScript>
      <postsendScript>$DEFAULT_POSTSEND_SCRIPT</postsendScript>
      <attachBuildLog>false</attachBuildLog>
      <compressBuildLog>false</compressBuildLog>
      <replyTo>$DEFAULT_REPLYTO</replyTo>
      <saveOutput>false</saveOutput>
      <disabled>false</disabled>
    </hudson.plugins.emailext.ExtendedEmailPublisher>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.34">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.8.9"/>
    <org.jenkinsci.plugins.builduser.BuildUser plugin="build-user-vars-plugin@1.5"/>
  </buildWrappers>
</project>