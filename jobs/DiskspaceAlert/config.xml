<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs></blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty plugin="build-failure-analyzer@1.19.2">
      <doNotScan>false</doNotScan>
    </com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.2">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.28">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>BUILD_VERSION</name>
          <description>&lt;B&gt;Value can be:&lt;/B&gt; &lt;BR&gt;
version as 17.01.00.20600 &lt;BR&gt;
Version file which contain the version as a value for the &apos;CurrentVersion&apos; property. As \\isr1appcc02\SCM\OMD\Jenkins_Build_Version\17.02Version.txt&lt;BR&gt;</description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MajorMinor_Ver</name>
          <description>&lt;B&gt;Value can be:&lt;/B&gt; &lt;BR&gt;
version as 17.01 &lt;BR&gt;
This value will be used ONLY if BUILD_VERSION was provided as a filepath and not a specific version</description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <org.jvnet.jenkins.plugins.nodelabelparameter.NodeParameterDefinition plugin="nodelabelparameter@1.7.2">
          <name>buildEngineHostName</name>
          <description></description>
          <allowedSlaves>
            <string>SCM-Builds-01</string>
            <string>SCM-Builds-02</string>
            <string>SCM-Builds-03</string>
            <string>SCM-Builds-04</string>
            <string>SCM-Builds-05</string>
            <string>SCM-Builds-06</string>
          </allowedSlaves>
          <defaultSlaves/>
          <triggerIfResult>multiSelectionDisallowed</triggerIfResult>
          <allowMultiNodeSelection>false</allowMultiNodeSelection>
          <triggerConcurrentBuilds>false</triggerConcurrentBuilds>
          <ignoreOfflineNodes>false</ignoreOfflineNodes>
          <nodeEligibility class="org.jvnet.jenkins.plugins.nodelabelparameter.node.AllNodeEligibility"/>
        </org.jvnet.jenkins.plugins.nodelabelparameter.NodeParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <paramsToUseForLimit></paramsToUseForLimit>
      <configVersion>1</configVersion>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    <org.jvnet.hudson.plugins.shelveproject.ShelveProjectProperty plugin="shelve-project-plugin@1.5"/>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>30</daysToKeep>
        <numToKeep>-1</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>true</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.plugins.groovy.Groovy plugin="groovy@2.0">
      <scriptSource class="hudson.plugins.groovy.StringScriptSource">
        <command>import java.net.InetAddress;
import hudson.model.*
import jenkins.model.*

  
def BUILD_VERSION=System.getenv(&quot;BUILD_VERSION&quot;).startsWith(&quot;\\&quot;) ? &quot;\\&quot;+System.getenv(&quot;BUILD_VERSION&quot;):System.getenv(&quot;BUILD_VERSION&quot;);
def fBuildNum= new File(BUILD_VERSION)
if (fBuildNum.exists()){
    BUILD_VERSION=System.getenv(&quot;MajorMinor_Ver&quot;)
}

List&lt;String[]&gt; candidators_list=[[&quot;D:/&quot;,&quot;Snadbox&quot;,&quot;130&quot;],[&quot;\\\\isr1appcc02//views//OMD&quot;,&quot;CodeView&quot;,&quot;90&quot;],[&quot;////isr1nas03//SW-omd//Archer_Builds&quot;,&quot;BuildOutputs&quot;,&quot;90&quot;] ,[&quot;////isr1nas03//SW-omd//Archer_Installations&quot;,&quot;Media&quot;,&quot;50&quot;]]
def shouldAlertBeSent=false
def title=&quot;Build related FS disk Space usage in &quot; + InetAddress.getLocalHost().getHostName()


def build_msg= BUILD_VERSION != &quot;&quot;? &quot;&lt;BR&gt;Build of &quot;+ BUILD_VERSION+&quot; started on &quot;+InetAddress.getLocalHost().getHostName()+&quot;, but may fail with diskspace issues.&quot; :&quot;&quot;
def introduction=&quot;Dear user, &lt;ol&gt;${build_msg}&lt;BR&gt;Following filesystems has free space less than requeted - Next build may fail:&quot;
def errDisks=&quot;&quot;
def table=&quot;&lt;TABLE BORDER=\&quot;4\&quot; CELLPADDING=\&quot;4\&quot; CELLSPACING=\&quot;5\&quot;&gt;&lt;TR&gt;&lt;TH COLSPAN=\&quot;5\&quot;&gt;&lt;H1&gt;&quot; +title+ &quot;&lt;/H1&gt;&lt;/TH&gt;&lt;/TR&gt;&lt;TR&gt;&quot;
table+=&quot;&lt;TH&gt; Description &lt;/TH&gt;&lt;TH&gt; URL/Path &lt;/TH&gt;&lt;TH&gt;Total Capacity (GB)&lt;/TH&gt;&lt;TH&gt;Free Space (GB)&lt;/TH&gt;&lt;TH&gt;Threshould (GB)&lt;/TH&gt;&lt;/TR&gt;&quot;

Date date = new Date()
String datePart = date.format(&quot;dd/MM/yyyy&quot;)
String timePart = date.format(&quot;HH:mm:ss&quot;)
println &quot;datePart : &quot; + datePart + &quot;\ttimePart : &quot; + timePart
                
for (String[] candidator : candidators_list){
                

File diskPartition = new File(candidator[0]);
double totalCapacity = ((double)diskPartition.getTotalSpace()/ (1024.00 *1024*1024)).round(2);
        double freePartitionSpace = ((double)diskPartition.getFreeSpace()/ (1024.00 *1024*1024)).round(2);
def diskspace_threshould = candidator[2] as int;
if (freePartitionSpace &lt; diskspace_threshould ) {
        shouldAlertBeSent=true;
        introduction+= &quot;&lt;blockquote&gt;&lt;li&gt;&quot; + diskPartition.getPath() +&quot;&lt;/li&gt;&lt;/blockquote&gt;&quot;
           color=&quot; bgcolor=\&quot;#FF0000\&quot;&quot;
}else{
  color=&quot;&quot;
}
 table+=&quot;&lt;TR ALIGN=\&quot;CENTER\&quot;&quot;+color+&quot;&gt;&lt;TD&gt;&quot;+ candidator[1]+ &quot;&lt;/TD&gt;&quot;    
  table+= &quot;&lt;TD&gt;&quot; +diskPartition.getPath()+ &quot;&lt;/TD&gt;&quot;
 table+=&quot;&lt;TD&gt;&quot;+ totalCapacity + &quot;&lt;/TD&gt;&quot;
 table+=&quot;&lt;TD&gt;&quot;+ freePartitionSpace+ &quot;&lt;/TD&gt;&quot;
 table+=&quot;&lt;TD&gt;&quot;+diskspace_threshould  + &quot;&lt;/TD&gt;&lt;/TR&gt;&quot;
}
table+=&quot;&lt;/TABLE&gt;&quot;

new File(&quot;C:/Temp/diskSpaceAlert.html&quot;).write(introduction + &quot;&lt;BR&gt;&quot; + table +&quot;&lt;/ol&gt;&quot;)


if (shouldAlertBeSent)
	build.result = hudson.model.Result.fromString(&apos;FAILED&apos;)</command>
      </scriptSource>
      <groovyName>Groovy2.4.9</groovyName>
      <parameters></parameters>
      <scriptParameters></scriptParameters>
      <properties></properties>
      <javaOpts></javaOpts>
      <classPath></classPath>
    </hudson.plugins.groovy.Groovy>
  </builders>
  <publishers>
    <hudson.plugins.emailext.ExtendedEmailPublisher plugin="email-ext@2.62">
      <recipientList>Adham.Saffori@kla-tencor.com,Omer.Shachor@kla-tencor.com, Michal.Chiel@kla-tencor.com,Agnes.Zhang@kla-tencor.com,Sharon.Mizrachi@kla-tencor.com,Lusong.Hou@kla-tencor.com</recipientList>
      <configuredTriggers>
        <hudson.plugins.emailext.plugins.trigger.FailureTrigger>
          <email>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <recipientProviders>
              <hudson.plugins.emailext.plugins.recipients.ListRecipientProvider/>
            </recipientProviders>
            <attachmentsPattern></attachmentsPattern>
            <attachBuildLog>false</attachBuildLog>
            <compressBuildLog>false</compressBuildLog>
            <replyTo>$PROJECT_DEFAULT_REPLYTO</replyTo>
            <contentType>project</contentType>
          </email>
        </hudson.plugins.emailext.plugins.trigger.FailureTrigger>
      </configuredTriggers>
      <contentType>default</contentType>
      <defaultSubject></defaultSubject>
      <defaultContent>${FILE,path=&quot;C:/Temp/diskSpaceAlert.html&quot;}</defaultContent>
      <attachmentsPattern></attachmentsPattern>
      <presendScript>def VERSION= build.getEnvVars().get(&quot;BUILD_VERSION&quot;);
fBuildNum= new File(VERSION)
if (fBuildNum.exists())
    VERSION=build.getEnvVars().get(&quot;MajorMinor_Ver&quot;)
msg.setSubject(&quot;Build &quot; + VERSION +&quot; - Disk space alert&quot;);</presendScript>
      <postsendScript>import org.jvnet.hudson.plugins.groovypostbuild.*;
import  javax.mail.Multipart;

// create the summary with the document icon and attach to the build
GroovyPostbuildSummaryAction action = new GroovyPostbuildSummaryAction(&quot;notepad.png&quot;);
build.getActions().add(action);
// Read mail content and attach it to the build summary
Multipart mp= (Multipart)msg.getContent()
action.appendText(mp.getBodyPart(0).getContent().toString(), false);
//save the build!
build.save()</postsendScript>
      <attachBuildLog>false</attachBuildLog>
      <compressBuildLog>false</compressBuildLog>
      <replyTo>$DEFAULT_REPLYTO</replyTo>
      <saveOutput>false</saveOutput>
      <disabled>false</disabled>
    </hudson.plugins.emailext.ExtendedEmailPublisher>
  </publishers>
  <buildWrappers>
    <EnvInjectBuildWrapper plugin="envinject@1.90">
      <info>
        <groovyScriptContent>

def filepath= currentBuild.getEnvVars().get(&quot;BUILD_VERSION&quot;).startsWith(&quot;\\&quot;) ? &quot;\\&quot;+BUILD_VERSION:BUILD_VERSION;
def fBuildNum= new File(filepath)


if (fBuildNum.exists()){
    BUILD_VERSION=MajorMinor_Ver
}
def map = [ &quot;BUILD_VERSION&quot;:BUILD_VERSION]
	return 	map</groovyScriptContent>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
    </EnvInjectBuildWrapper>
  </buildWrappers>
</project>